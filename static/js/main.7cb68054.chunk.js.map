{"version":3,"sources":["Canvas.js","Graph.js","Data.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","props","onPlay","bind","onClear","state","canvasRef","React","createRef","orientation","centerPos","x","this","data","get","Math","cos","PI","y","sin","setPlay","setClear","cPos","current","width","height","setState","getContext","lineTo","nextPos","ctx","STEP","moveTo","beginPath","i","stroke","Promise","r","setTimeout","resetPath","clearRect","className","ref","Component","Graph","margin","top","right","bottom","left","xScale","d3","domain","range","yScale","drawChart","drawPath","line","d","drag","on","event","onChange","value","p","invert","svg","arr","push","dataPoints","console","log","selectAll","remove","pointList","toList","enter","append","attr","call","defaultPrevented","datum","onAdd","fill","Point","px","py","fun","Data","prevPointList","initialize","add","newList","Object","entries","v","copy","newData","list","index","Symbol","iterator","values","prevPoint","findPrevPoint","type","p1","findNextPoint","p2","replace","nextPoint","canBeX","App","onReverse","onDefault","reverse","play","playCanvas","clear","clearCanvas","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cb68054.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Canvas extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onPlay = this.onPlay.bind(this);\r\n        this.onClear = this.onClear.bind(this);\r\n\r\n        this.state = {\r\n            canvasRef: React.createRef(),\r\n            orientation: 0,\r\n            centerPos: null\r\n        };\r\n    }\r\n\r\n    nextPos(orientation) {\r\n        return {\r\n            x: this.state.centerPos.x + (this.props.data.get(orientation) * Math.cos(orientation*2*Math.PI)),\r\n            y: this.state.centerPos.y - (this.props.data.get(orientation) * Math.sin(orientation*2*Math.PI))\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.props.setPlay(this.onPlay)\r\n        this.props.setClear(this.onClear)\r\n\r\n        const cPos = {x: this.state.canvasRef.current.width / 2, y: this.state.canvasRef.current.height / 2}\r\n        this.setState({centerPos: cPos})\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        // ctx.moveTo(this.state.canvasRef.current.width / 2, this.state.canvasRef.current.height / 2)\r\n        // ctx.beginPath()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        ctx.lineTo(this.nextPos(this.state.orientation).x, this.nextPos(this.state.orientation).y)\r\n        //ctx.stroke()\r\n    }\r\n\r\n    resetPath(ctx) {\r\n        //ctx.closePath()\r\n        //ctx.moveTo(this.state.centerPos.x, this.state.centerPos.y)\r\n        //ctx.beginPath()\r\n    }\r\n\r\n    async onPlay() {\r\n\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        const STEP = 0.01\r\n\r\n        ctx.moveTo(this.state.canvasRef.current.width / 2, this.state.canvasRef.current.height / 2)\r\n        ctx.beginPath()\r\n\r\n        for(let i = 0; i <= 1; i = i + STEP) {\r\n            ctx.stroke()\r\n            this.setState({orientation: i})\r\n            await new Promise(r => setTimeout(r, 5));\r\n        }\r\n\r\n        this.resetPath(ctx)\r\n    }\r\n\r\n    onClear() {\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        this.resetPath(ctx)\r\n        ctx.clearRect(0, 0, this.state.canvasRef.current.width, this.state.canvasRef.current.height)\r\n    }\r\n\r\n    render() { return (\r\n        <div className=\"Canvas\">\r\n            <h1>Canvas</h1>\r\n            <canvas ref={this.state.canvasRef} height={480} width={480} />\r\n        </div>\r\n    )}\r\n\r\n}\r\n\r\nexport default Canvas","import React from 'react'\r\nimport * as d3 from \"d3\"\r\nimport {mouse} from \"d3\"\r\n\r\nclass Graph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.margin = {top: 20, right: 30, bottom: 20, left: 30}\r\n        this.width = 480; this.height = 480;\r\n        this.xScale = d3.scaleLinear().domain([0, 1]).range([0 + this.margin.right, this.width - this.margin.left]);\r\n        this.yScale = d3.scaleLinear().domain([-50, 50]).range([0 + this.margin.top, this.height - this.margin.bottom]);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.drawChart()\r\n        this.drawPath()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawPath()\r\n    }\r\n\r\n    drawPath() {\r\n        const line = d3.line()\r\n            .x(d => this.xScale(d.x))\r\n            .y(d => this.yScale(d.y))\r\n\r\n        const drag = d3.drag()\r\n            .on(\"drag\", (event, d) => {\r\n                this.props.onChange(d.value.p.x, this.yScale.invert(event.y))\r\n            })\r\n            //.subject({x: this.xScale(0), y: this.yScale(0)})\r\n\r\n        const addPoints = () => {\r\n            console.log(\"addPoints(): \", this.props.data.pointList)\r\n            svg.selectAll(\"pathCircles\")\r\n                .data(this.props.data.toList())\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .attr(\"id\", \"pathPoints\")\r\n                    .attr(\"cx\", d => this.xScale(d.value.p.x))\r\n                    .attr(\"cy\", d => this.yScale(d.value.p.y))\r\n                    .attr(\"fill\", \"red\")\r\n                    .attr(\"r\", 4)\r\n                    .on(\"mouseover\", function(d) { d3.select(this).attr(\"stroke\", \"black\").attr(\"stroke-width\", 4) })\r\n                    .on(\"mouseout\", function(d) { d3.select(this).attr(\"stroke\", \"none\") })\r\n                    .call(drag)\r\n                    .on(\"click\", event => { if(event.defaultPrevented) return })\r\n\r\n        }\r\n\r\n        const dataPoints = (STEP) => {\r\n            let arr = []\r\n            for(let i = 0; i <= 1; i = i + STEP) arr.push({x: i, y: this.props.data.get(i)})\r\n            return arr\r\n        }\r\n\r\n        const svg = d3.select(\"svg\")\r\n        const data = dataPoints(0.01)\r\n        console.log(data)\r\n        \r\n        svg.selectAll(\"#pathPoints\").remove()\r\n        addPoints()\r\n\r\n        svg.selectAll(\"#dataPath\").remove()\r\n        const graph = svg.append(\"path\")\r\n            .attr(\"id\", \"dataPath\")\r\n            .datum(data)\r\n                .attr(\"d\", line)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"red\")\r\n                .attr(\"stroke-width\", 2)\r\n    }\r\n\r\n    drawChart() {\r\n        const svg = d3.select(\"svg\")\r\n\r\n        const addAxes = () => {\r\n            svg.append(\"g\")\r\n            .attr(\"transform\", `translate(0,${this.width * 0.5})`)\r\n            .call(d3.axisTop(this.xScale))\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${this.margin.left},0)`)\r\n            .call(d3.axisLeft(this.yScale))\r\n        }\r\n\r\n        d3.select(\"rect\")\r\n            .on(\"click\", event => {\r\n                this.props.onAdd(this.xScale.invert(d3.pointer(event)[0]), this.yScale.invert(d3.pointer(event)[1]))\r\n            })\r\n        addAxes()\r\n    }\r\n\r\n    render () { return (\r\n        <div className=\"Graph\">\r\n            <h1>Radius graph</h1>\r\n            <svg height={this.height} width={this.width}>\r\n                <g>\r\n                    <rect fill={\"#d6d6d6\"} height={this.height} width={this.width}></rect>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Graph","class Point {\r\n    constructor(px, py, fun) {\r\n        this.p = {x: px, y: py}\r\n        this.fun = fun\r\n    }\r\n\r\n    copy() {\r\n        //deep copy\r\n        return new Point(this.p.x, this.p.y, this.fun.bind({}))\r\n    }\r\n}\r\n\r\nclass Data {\r\n\r\n    constructor(prevPointList, initialize) {\r\n        this.pointList = prevPointList\r\n\r\n        if(initialize) {\r\n            console.log(\"Initializing pointList.\")\r\n            this.add({x: 1, y: 10}, \"constant\")\r\n            this.add({x: 0, y: 10}, \"linear\")\r\n            //this.replace(0, 20, \"linear\")\r\n        }\r\n\r\n        console.log(\"Constructed pointList: \", this.pointList)\r\n    }\r\n\r\n    copy() {\r\n        //creates deep copy of Data. For React <3\r\n        let newList = {}\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            newList[i] = v.copy()\r\n        }\r\n        return new Data(newList, false)\r\n    }\r\n\r\n    reverse() {\r\n        //returns new Data object with points reversed\r\n        let newData = new Data({}, false)\r\n        for(const [i, v] of Object.entries(this.pointList)) {\r\n            if(i === 0) newData.add({x: 1 - v.p.x, y: v.p.y}, \"constant\")\r\n            else newData.add({x: 1 - v.p.x, y: v.p.y}, \"linear\")\r\n        }\r\n        console.log(newData)\r\n        return newData\r\n    }\r\n\r\n    toList() {\r\n        let list = []\r\n        for (const [i, v] of Object.entries(this.pointList)) list.push({value: v, index: i})\r\n        return list\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return this.pointList.values()\r\n    }\r\n\r\n    get(x) {\r\n        const prevPoint = this.findPrevPoint(x)\r\n        if(prevPoint === null) return this.pointList[0].fun(x)  //first point\r\n        return prevPoint.value.fun(x) \r\n    }\r\n\r\n    replace(i, py, type) {\r\n        const p = {x: this.pointList[i].p.x, y: py}\r\n        //this.delete(i)\r\n        this.add(p, type)\r\n        console.log(\"Post-replace pointList: \", this.pointList)\r\n    }\r\n\r\n    add(p1, type) {\r\n        let fun\r\n        if(this.findNextPoint(p1.x) === null) type = \"constant\"\r\n        switch(type) {\r\n            case \"linear\":\r\n                const p2 = this.findNextPoint(p1.x).value.p\r\n                fun = x => (x - p1.x) * (p2.y - p1.y) / (p2.x - p1.x) + p1.y\r\n                break;\r\n            case \"constant\":\r\n                fun = x => p1.y\r\n                break;\r\n            case \"none\":\r\n                fun = x => 0\r\n                break;\r\n            case \"sine\":\r\n            default:\r\n                console.log(\"Function type not supported. Using default function.\")\r\n                fun = x => 10\r\n        }\r\n        this.pointList[p1.x] = (new Point(p1.x, p1.y, fun))\r\n        let prevPoint = this.findPrevPoint(p1.x)\r\n        if(prevPoint !== null) this.replace(prevPoint.index, prevPoint.value.p.y, \"linear\") //type is a guess\r\n    }\r\n\r\n    findNextPoint(x) {\r\n        // find next point relative to x along with the index\r\n        // scans every point in pointList\r\n\r\n        let nextPoint = null\r\n\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            if(x < v.p.x && (nextPoint === null || v.p.x < nextPoint.value.p.x)) {\r\n                nextPoint = {value: v, index: i}\r\n            }\r\n        }\r\n\r\n        return nextPoint\r\n    }\r\n\r\n    findPrevPoint(x, canBeX) {\r\n        // find previous point relative to x along with the index\r\n        // scans every point in pointList\r\n\r\n        let prevPoint = null\r\n\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            if(x > v.p.x && (prevPoint === null || v.p.x > prevPoint.value.p.x)) {\r\n                prevPoint = {value: v, index: i}\r\n            }\r\n        }\r\n\r\n        return prevPoint\r\n    }\r\n}\r\n\r\nexport default Data","import React from 'react'\r\nimport './App.css';\r\nimport Canvas from './Canvas.js';\r\nimport Graph from './Graph';\r\nimport Data, { Point } from './Data';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    //this.replaceDataValue = this.replaceDataValue.bind(this);\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onAdd = this.onAdd.bind(this)\r\n    this.onReverse = this.onReverse.bind(this)\r\n    this.onDefault = this.onDefault.bind(this)\r\n    this.state = {\r\n      //data: []\r\n      data: new Data({}, true)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.setState({data: this.state.data.copy()})\r\n    //this.onChange(0, 20)\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  onChange(i, py) {\r\n    this.state.data.replace(i, py, \"linear\")\r\n    this.setState({data: this.state.data.copy()})\r\n  }\r\n\r\n  onAdd(px, py) {\r\n    this.state.data.add({x: px, y: py}, \"linear\")\r\n    this.setState({data: this.state.data.copy()})\r\n  }\r\n\r\n  onReverse() {\r\n    this.setState({data: this.state.data.reverse()})\r\n  }\r\n\r\n  onDefault() {\r\n    this.setState({data: new Data({}, true)})\r\n  }\r\n\r\n  render() { return (\r\n    <div className=\"App\">\r\n      <div className=\"Meat\">\r\n        <Canvas data={this.state.data} setPlay={play => this.playCanvas = play} setClear={clear => this.clearCanvas = clear}/>\r\n        <Graph data={this.state.data} onChange={this.onChange} onAdd={this.onAdd}/>\r\n      </div>\r\n      <div className=\"Buttons\">\r\n        <button onClick={() => this.playCanvas()}>Play</button>\r\n        <button onClick={() => this.clearCanvas()}>Clear</button>\r\n        <button onClick={this.onReverse}>Reverse</button>\r\n        <button onClick={this.onDefault}>Default</button>\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}