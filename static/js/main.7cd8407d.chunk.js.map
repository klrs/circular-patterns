{"version":3,"sources":["Canvas.js","Graph.js","Data.js","HeadBar.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","props","onPlay","bind","onClear","onSave","state","canvasRef","React","createRef","orientation","centerPos","radians","this","degreeData","get","Math","PI","x","radiusData","cos","y","sin","setPlay","setClear","cPos","current","width","height","setState","getContext","lineTo","nextPos","ctx","EXECUTE_TIME_MIN","STEP","moveTo","beginPath","i","t0","performance","now","stroke","t1","deltaTime","Promise","r","setTimeout","resetPath","clearRect","link","document","createElement","download","href","toDataURL","body","appendChild","click","removeChild","className","ref","onClick","Component","Graph","margin","top","right","bottom","left","xScale","yScale","getXScaleFun","getYScaleFun","drawChart","drawPath","d3","domain","xMin","xMax","range","clamp","yMin","yMax","line","d","drag","on","event","onChange","value","p","invert","data","svg","toSortedList","map","e","console","log","selectAll","remove","pointList","toList","enter","append","attr","color","call","defaultPrevented","datum","onAdd","ticks","tickFormat","tickSize","fill","onReverse","onSnap","onDefault","Point","px","py","fun","Data","prevPointList","initialize","id","y0","y1","startValues","add","newList","Object","entries","v","copy","newData","emptyCopy","snapValue","list","push","index","sList","sort","p1","p2","Symbol","iterator","values","prevPoint","findPrevPoint","type","findNextPoint","replace","min","max","nextPoint","canBeX","HeadBar","onViewChange","parameter","toUpperCase","App","radiusDataScale","degreeDataScale","view","sideLength","getSideLength","window","innerWidth","getScale","reverse","snap","resetCopy","play","playCanvas","clear","clearCanvas","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7cd8407d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Canvas extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onPlay = this.onPlay.bind(this)\r\n        this.onClear = this.onClear.bind(this)\r\n        this.onSave = this.onSave.bind(this)\r\n\r\n        this.state = {\r\n            canvasRef: React.createRef(),\r\n            orientation: 0,\r\n            centerPos: null\r\n        };\r\n    }\r\n\r\n    nextPos(orientation) {\r\n        const radians = this.props.degreeData.get(orientation) / 360 * 2 * Math.PI\r\n        return {\r\n            x: this.state.centerPos.x + (this.props.radiusData.get(orientation) * Math.cos(radians)),\r\n            y: this.state.centerPos.y - (this.props.radiusData.get(orientation) * Math.sin(radians))\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.props.setPlay(this.onPlay)\r\n        this.props.setClear(this.onClear)\r\n\r\n        const cPos = {x: this.state.canvasRef.current.width / 2, y: this.state.canvasRef.current.height / 2}\r\n        this.setState({centerPos: cPos})\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        // ctx.moveTo(this.state.canvasRef.current.width / 2, this.state.canvasRef.current.height / 2)\r\n        // ctx.beginPath()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        ctx.lineTo(this.nextPos(this.state.orientation).x, this.nextPos(this.state.orientation).y)\r\n        //ctx.stroke()\r\n    }\r\n\r\n    resetPath(ctx) {\r\n        //ctx.closePath()\r\n        //ctx.moveTo(this.state.centerPos.x, this.state.centerPos.y)\r\n        //ctx.beginPath()\r\n    }\r\n\r\n    async onPlay() {\r\n\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        const STEP = 0.01 \r\n        const EXECUTE_TIME_MIN = 200 * STEP //ms\r\n\r\n        ctx.moveTo(this.state.canvasRef.current.width / 2, this.state.canvasRef.current.height / 2)\r\n        ctx.beginPath()\r\n\r\n        for(let i = 0; i <= 1 + STEP; i = i + STEP) {\r\n            let t0 = performance.now()\r\n            if(i > 1) this.setState({orientation: 1}); else this.setState({orientation: i})\r\n            ctx.stroke()\r\n            let t1 = performance.now()\r\n            let deltaTime = t1 - t0\r\n\r\n            if(deltaTime < EXECUTE_TIME_MIN) { await new Promise(r => setTimeout(r, EXECUTE_TIME_MIN - deltaTime)); }\r\n        }\r\n\r\n        this.resetPath(ctx)\r\n    }\r\n\r\n    onClear() {\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        this.resetPath(ctx)\r\n        ctx.clearRect(0, 0, this.state.canvasRef.current.width, this.state.canvasRef.current.height)\r\n    }\r\n\r\n    onSave() {\r\n        var link = document.createElement(\"a\");\r\n        link.download = \"canvas.png\";\r\n        link.href = this.state.canvasRef.current.toDataURL(\"image/png\");\r\n        \r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    render() { return (\r\n        <div className=\"Canvas\">\r\n            <div>\r\n                <canvas ref={this.state.canvasRef} height={this.props.height} width={this.props.width} />\r\n                <div className=\"ButtonContainer\">\r\n                    <div><button onClick={this.onPlay}>PLAY</button></div>\r\n                    <div><button onClick={this.onClear}>CLEAR</button></div>\r\n                    <div><button onClick={this.onSave}>SAVE</button></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )}\r\n\r\n}\r\n\r\nfunction Downloader(props) {\r\n    return (\r\n        React.createElement('a', {\r\n            download: 'canvas.png',\r\n            href: props.canvas.toDataURL('image/png')}, null)\r\n    )\r\n}\r\n\r\nexport default Canvas","import React from 'react'\r\nimport * as d3 from \"d3\"\r\nimport {index, mouse} from \"d3\"\r\n\r\nclass Graph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.margin = {top: 20, right: 30, bottom: 20, left: 30}\r\n        this.width = props.width; this.height = props.height;\r\n        this.xScale = null\r\n        this.yScale = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.xScale = this.getXScaleFun()\r\n        this.yScale = this.getYScaleFun()\r\n        this.drawChart()\r\n        this.drawPath()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.xScale = this.getXScaleFun()\r\n        this.yScale = this.getYScaleFun()\r\n        this.drawChart()\r\n        this.drawPath()\r\n    }\r\n\r\n    getXScaleFun() {\r\n        return d3.scaleLinear()\r\n            .domain([this.props.xMin, this.props.xMax])\r\n            .range([0 + this.margin.right, this.width - this.margin.left])\r\n            .clamp(true);\r\n    }\r\n\r\n    getYScaleFun() {\r\n        return d3.scaleLinear()\r\n            .domain([this.props.yMin, this.props.yMax])\r\n            //.range([0 + this.margin.top, this.height - this.margin.bottom])\r\n            .range([this.height - this.margin.bottom, 0 + this.margin.top])\r\n    }\r\n\r\n    drawPath() {\r\n        const line = d3.line()\r\n            .x(d => this.xScale(d.x))\r\n            .y(d => this.yScale(d.y))\r\n\r\n        const drag = d3.drag()\r\n            .on(\"drag\", (event, d) => {\r\n                this.props.onChange(d.value.p.x, this.yScale.invert(event.y), this.props.data)\r\n            })\r\n            //.subject({x: this.xScale(0), y: this.yScale(0)})\r\n\r\n        const addPoints = () => {\r\n            console.log(\"addPoints(): \", this.props.data.pointList)\r\n            svg.selectAll(\"pathCircles\")\r\n                .data(this.props.data.toList())\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .attr(\"id\", \"pathPoints\")\r\n                    .attr(\"cx\", d => this.xScale(d.value.p.x))\r\n                    .attr(\"cy\", d => this.yScale(d.value.p.y))\r\n                    .attr(\"fill\", this.props.color)\r\n                    .attr(\"r\", 6)\r\n                    .on(\"mouseover\", function(d) { d3.select(this).attr(\"stroke\", \"black\").attr(\"stroke-width\", 4) })\r\n                    .on(\"mouseout\", function(d) { d3.select(this).attr(\"stroke\", \"none\") })\r\n                    .call(drag)\r\n                    .on(\"click\", event => { if(event.defaultPrevented) return })\r\n\r\n        }\r\n\r\n        // for non linear functions\r\n        // const dataPoints = (STEP) => {\r\n        //     let arr = []\r\n        //     for(let i = 0; i <= 1; i = i + STEP) arr.push({x: i, y: this.props.data.get(i)})\r\n        //     return arr\r\n        // }\r\n\r\n        const dataPoints = () => {\r\n            let sortedList = this.props.data.toSortedList()\r\n            return sortedList.map((e) => { return {x: e.value.p.x, y: e.value.p.y} })\r\n        }\r\n\r\n        const svg = d3.select(\"svg\")\r\n        const data = dataPoints()\r\n        console.log(data)\r\n        \r\n        svg.selectAll(\"#pathPoints\").remove()\r\n        addPoints()\r\n\r\n        svg.selectAll(\"#dataPath\").remove()\r\n        const graph = svg.append(\"path\")\r\n            .attr(\"id\", \"dataPath\")\r\n            .datum(data)\r\n                .attr(\"d\", line)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", this.props.color)\r\n                .attr(\"stroke-width\", 2)\r\n    }\r\n\r\n    drawChart() {\r\n        const svg = d3.select(\"svg\")\r\n        const addAxes = () => {\r\n            svg.append(\"g\")\r\n                .attr(\"class\", \"axes\")\r\n                .attr(\"transform\", `translate(0,${this.margin.top})`)\r\n                .call(d3.axisTop(this.xScale))\r\n                //.call(d3.axisBottom(this.xScale).ticks(5))\r\n\r\n            svg.append(\"g\")\r\n                .attr(\"class\", \"axes\")\r\n                .attr(\"transform\", `translate(${this.margin.left},0)`)\r\n                .call(d3.axisLeft(this.yScale))\r\n        }\r\n\r\n        const addGrid = () => {\r\n            svg.append(\"g\")\r\n                .attr(\"class\", \"grid\")\r\n                .attr(\"transform\", `translate(0, ${this.margin.top})`)\r\n                .call(d3.axisBottom(this.xScale).ticks(5)\r\n                    .tickFormat(\"\")\r\n                    .tickSize(this.height - this.margin.top - this.margin.bottom)\r\n                )\r\n\r\n            svg.append(\"g\")\r\n                .attr(\"class\", \"grid\")\r\n                .attr(\"transform\", `translate(${this.margin.left},0)`)\r\n                .call(d3.axisRight(this.yScale).ticks(5)\r\n                    .tickFormat(\"\")\r\n                    .tickSize(this.width - this.margin.left - this.margin.right)\r\n                )  \r\n        }\r\n\r\n        d3.select(\"rect\")\r\n            .on(\"click\", event => {\r\n                this.props.onAdd(this.xScale.invert(d3.pointer(event)[0]), this.yScale.invert(d3.pointer(event)[1]), this.props.data)\r\n            })\r\n        svg.selectAll(\".axes\").remove()\r\n        svg.selectAll(\".grid\").remove()\r\n        addAxes()\r\n        addGrid()\r\n    }\r\n\r\n    render () { return (\r\n        <div className=\"Graph\">\r\n            <svg height={this.height} width={this.width}>\r\n                <g>\r\n                    <rect fill={\"#d6d6d6\"} height={this.height} width={this.width}></rect>\r\n                </g>\r\n            </svg>\r\n            <div className=\"ButtonContainer\">\r\n                <div><button onClick={() => { this.props.onReverse(this.props.data) }}>REVERSE</button></div>\r\n                <div><button onClick={() => { this.props.onSnap(this.props.data) }}>SNAP</button></div>\r\n                <div><button onClick={() => { this.props.onDefault(this.props.data) }}>DEFAULT</button></div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Graph","class Point {\r\n    constructor(px, py, fun) {\r\n        this.p = {x: px, y: py}\r\n        this.fun = fun\r\n    }\r\n\r\n    copy() {\r\n        //deep copy\r\n        return new Point(this.p.x, this.p.y, this.fun.bind({}))\r\n    }\r\n}\r\n\r\nclass Data {\r\n\r\n    constructor(prevPointList, initialize, id, y0, y1) {\r\n        this.pointList = prevPointList  //not actually a list but an object\r\n        this.id = id    //should be same as App's state variable\r\n        this.startValues = {y0: y0, y1: y1} //save the values at App constructor in case reset is needed...\r\n\r\n        if(initialize) {\r\n            console.log(\"Initializing pointList.\")\r\n            this.add({x: 1, y: y1}, \"constant\")\r\n            this.add({x: 0, y: y0}, \"linear\")\r\n            //this.replace(0, 20, \"linear\")\r\n        }\r\n\r\n        console.log(\"Constructed pointList: \", this.pointList)\r\n    }\r\n\r\n    copy() {\r\n        //creates deep copy of Data. For React <3\r\n        let newList = {}\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            newList[i] = v.copy()\r\n        }\r\n        return new Data(newList, false, this.id, this.startValues.y0, this.startValues.y1)\r\n    }\r\n\r\n    emptyCopy() {\r\n        return new Data({}, false, this.id, this.startValues.y0, this.startValues.y1)\r\n    }\r\n\r\n    resetCopy() {\r\n        return new Data({}, true, this.id, this.startValues.y0, this.startValues.y1)\r\n    }\r\n\r\n    reverse() {\r\n        //returns new Data object with points reversed\r\n        let newData = this.emptyCopy()\r\n        for(const [i, v] of Object.entries(this.pointList)) {\r\n            if(i === 0) newData.add({x: 1 - v.p.x, y: v.p.y}, \"constant\")\r\n            else newData.add({x: 1 - v.p.x, y: v.p.y}, \"linear\")\r\n        }\r\n\r\n        return newData\r\n    }\r\n\r\n    snap() {\r\n        const snapValue = this.pointList[1].p.y - this.pointList[0].p.y\r\n        let newData = this.emptyCopy()\r\n\r\n        for(const [i, v] of Object.entries(this.pointList)) {\r\n            if(i === 1) newData.add({x: v.p.x, y: v.p.y + snapValue}, \"constant\")\r\n            newData.add({x: v.p.x, y: v.p.y + snapValue}, \"linear\")\r\n        }\r\n        console.log(newData)\r\n        return newData\r\n    }\r\n\r\n    toList() {\r\n        let list = []\r\n        for (const [i, v] of Object.entries(this.pointList)) list.push({value: v, index: i})\r\n        return list\r\n    }\r\n\r\n    toSortedList() {\r\n        let list = this.toList()\r\n        let sList = list.sort((p1, p2) => {\r\n            if(p1.index < p2.index) return -1\r\n            else if(p1.index > p2.index) return 1\r\n            else return 0\r\n        })\r\n        console.log(\"sortedList:\", sList)\r\n        return sList\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return this.pointList.values()\r\n    }\r\n\r\n    get(x) {\r\n        const prevPoint = this.findPrevPoint(x)\r\n        if(prevPoint === null) return this.pointList[0].fun(x)  //first point\r\n        return prevPoint.value.fun(x) \r\n    }\r\n\r\n    replace(i, py, type) {\r\n        const p = {x: this.pointList[i].p.x, y: py}\r\n        //this.delete(i)\r\n        this.add(p, type)\r\n        console.log(\"Post-replace pointList: \", this.pointList)\r\n    }\r\n\r\n    add(p1, type) {\r\n        let fun\r\n        if(this.findNextPoint(p1.x) === null) type = \"constant\"\r\n        switch(type) {\r\n            case \"linear\":\r\n                const p2 = this.findNextPoint(p1.x).value.p\r\n                fun = x => (x - p1.x) * (p2.y - p1.y) / (p2.x - p1.x) + p1.y\r\n                break;\r\n            case \"constant\":\r\n                fun = x => p1.y\r\n                break;\r\n            case \"none\":\r\n                fun = x => 0\r\n                break;\r\n            case \"sine\":\r\n            default:\r\n                console.log(\"Function type not supported. Using default function.\")\r\n                fun = x => 10\r\n        }\r\n        this.pointList[p1.x] = (new Point(p1.x, p1.y, fun))\r\n        let prevPoint = this.findPrevPoint(p1.x)\r\n        if(prevPoint !== null) this.replace(prevPoint.index, prevPoint.value.p.y, \"linear\") //type is a guess\r\n    }\r\n\r\n    // getScale() {\r\n    //     const mean = Object.values(this.pointList).reduce((a, b) => {return new Point(0, a.p.y + b.p.y, () => 0)}).p.y / Object.keys(this.pointList).length\r\n\r\n    //     return {\r\n    //         min: mean - 50,\r\n    //         max: mean + 50\r\n    //     }\r\n    // }\r\n\r\n    getScale() {\r\n        return {\r\n            min: this.get(0.5) - this.startValues.y1,\r\n            max: this.get(0.5) + this.startValues.y1\r\n        }\r\n    }\r\n\r\n    findNextPoint(x) {\r\n        // find next point relative to x along with the index\r\n        // scans every point in pointList\r\n\r\n        let nextPoint = null\r\n\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            if(x < v.p.x && (nextPoint === null || v.p.x < nextPoint.value.p.x)) {\r\n                nextPoint = {value: v, index: i}\r\n            }\r\n        }\r\n\r\n        return nextPoint\r\n    }\r\n\r\n    findPrevPoint(x, canBeX) {\r\n        // find previous point relative to x along with the index\r\n        // scans every point in pointList\r\n\r\n        let prevPoint = null\r\n\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            if(x > v.p.x && (prevPoint === null || v.p.x > prevPoint.value.p.x)) {\r\n                prevPoint = {value: v, index: i}\r\n            }\r\n        }\r\n\r\n        return prevPoint\r\n    }\r\n}\r\n\r\nexport default Data","import React from 'react'\r\n\r\nfunction HeadBar(props) {\r\n    return (\r\n        <div className=\"HeadBar\">\r\n            <div id=\"logo\"><b>CIRCULAR PATTERNS by Kalle Rissanen</b></div>\r\n            <div id=\"parameter\"><button onClick={props.onViewChange}>PARAMETER: {props.parameter.toUpperCase()}</button></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeadBar","import React from 'react'\r\nimport './App.css';\r\nimport Canvas from './Canvas.js';\r\nimport Graph from './Graph';\r\nimport Data, { Point } from './Data';\r\nimport HeadBar from './HeadBar';\r\nimport { render } from 'react-dom';\r\nimport { timeHours } from 'd3';\r\n\r\nclass App extends React.Component {\r\n\r\n  //TODO CREATE SMART SCALING FOR DIFFERENT DATA\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    //this.replaceDataValue = this.replaceDataValue.bind(this);\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onAdd = this.onAdd.bind(this)\r\n    this.onReverse = this.onReverse.bind(this)\r\n    this.onSnap = this.onSnap.bind(this)\r\n    this.onDefault = this.onDefault.bind(this)\r\n    this.onViewChange = this.onViewChange.bind(this)\r\n    this.state = {\r\n      //data: []\r\n      radiusData: new Data({}, true, \"radiusData\", 50, 50),\r\n      radiusDataScale: {min: 0, max: 0},\r\n      degreeData: new Data({}, true, \"degreeData\", 0, 360),\r\n      degreeDataScale: {min: 0, max: 0},\r\n      view: \"radius\"\r\n    }\r\n    this.sideLength = this.getSideLength()  //used to set graphs and canvas's widht & height\r\n    console.log(this.sideLength)\r\n  }\r\n\r\n  getSideLength() {\r\n    if(window.innerWidth > 720) return window.innerWidth * 0.35\r\n    else return window.innerWidth\r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\"inner: \", window.innerWidth, window.innerHeight)\r\n    this.setState({\r\n      radiusDataScale: this.state.radiusData.getScale(),\r\n      degreeDataScale: this.state.degreeData.getScale()\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  onChange(i, py, data) {\r\n    data.replace(i, py, \"linear\")\r\n    this.setState({[data.id]: data.copy()})\r\n  }\r\n\r\n  onAdd(px, py, data) {\r\n    data.add({x: px, y: py}, \"linear\")\r\n    this.setState({[data.id]: data.copy()})\r\n  }\r\n\r\n  onReverse(data) {\r\n    console.log(\"onReverse called\")\r\n    this.setState({[data.id]: data.reverse()})\r\n  }\r\n\r\n  onSnap(data) {\r\n    const newData = data.snap()\r\n    this.setState({\r\n      [data.id]: newData,\r\n      [data.id + \"Scale\"]: newData.getScale()\r\n    })\r\n  }\r\n\r\n  onDefault(data) {\r\n    const newData = data.resetCopy()\r\n    this.setState({\r\n      [data.id]: newData,\r\n      [data.id + \"Scale\"]: newData.getScale()\r\n    })\r\n  }\r\n\r\n  onViewChange() {\r\n    let view\r\n    if(this.state.view === \"radius\") view = \"degree\"\r\n    else view = \"radius\"\r\n    \r\n    this.setState({view: view})\r\n  }\r\n\r\n  render() {\r\n    let view\r\n    if(this.state.view === \"radius\") {\r\n      view = <Graph\r\n        width={this.sideLength} height={this.sideLength}\r\n        data={this.state.radiusData} onChange={this.onChange} onAdd={this.onAdd} color=\"red\"\r\n        xMin={0} xMax={1} yMin={this.state.radiusDataScale.min} yMax={this.state.radiusDataScale.max}\r\n        onReverse={this.onReverse} onSnap={this.onSnap} onDefault={this.onDefault}\r\n      />\r\n    }\r\n    else if(this.state.view === \"degree\") {\r\n      view = <Graph\r\n        width={this.sideLength} height={this.sideLength}\r\n        data={this.state.degreeData} onChange={this.onChange} onAdd={this.onAdd} color=\"blue\"\r\n        xMin={0} xMax={1} yMin={this.state.degreeDataScale.min} yMax={this.state.degreeDataScale.max}\r\n        onReverse={this.onReverse} onSnap={this.onSnap} onDefault={this.onDefault}\r\n      />\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <HeadBar onViewChange={this.onViewChange} parameter={this.state.view}/>\r\n        <div className=\"Body\">\r\n          <div className=\"Meat\">\r\n            <Canvas\r\n              radiusData={this.state.radiusData} degreeData={this.state.degreeData} width={this.sideLength} height={this.sideLength}\r\n              setPlay={play => this.playCanvas = play} setClear={clear => this.clearCanvas = clear}\r\n            />\r\n            {view}\r\n          </div>\r\n          {/* <div className=\"Buttons\">\r\n            <button onClick={() => this.playCanvas()}>Play</button>\r\n            <button onClick={() => this.clearCanvas()}>Clear</button>\r\n            <button onClick={this.onReverse}>Reverse</button>\r\n            <button onClick={this.onSnap}>Snap</button>\r\n            <button onClick={this.onDefault}>Default</button>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n  )}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}