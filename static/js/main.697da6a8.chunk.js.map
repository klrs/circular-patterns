{"version":3,"sources":["Canvas.js","Graph.js","Data.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","props","onPlay","bind","onClear","state","canvasRef","React","createRef","orientation","centerPos","x","this","data","get","Math","cos","PI","y","sin","setPlay","setClear","cPos","current","width","height","setState","getContext","lineTo","nextPos","ctx","EXECUTE_TIME_MIN","STEP","moveTo","beginPath","i","t0","performance","now","stroke","t1","deltaTime","Promise","r","setTimeout","resetPath","clearRect","className","ref","Component","Graph","margin","top","right","bottom","left","xScale","yScale","getXScaleFun","getYScaleFun","drawChart","drawPath","d3","domain","xMin","xMax","range","clamp","yMin","yMax","line","d","drag","on","event","onChange","value","p","invert","svg","toSortedList","map","e","console","log","selectAll","remove","pointList","toList","enter","append","attr","call","defaultPrevented","datum","onAdd","fill","Point","px","py","fun","Data","prevPointList","initialize","add","newList","Object","entries","v","copy","newData","snapValue","list","push","index","sList","sort","p1","p2","Symbol","iterator","values","prevPoint","findPrevPoint","type","findNextPoint","replace","mean","reduce","a","b","keys","length","min","max","nextPoint","canBeX","App","onReverse","onSnap","onDefault","yScaleMin","yScaleMax","reverse","snap","getScale","play","playCanvas","clear","clearCanvas","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.697da6a8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nclass Canvas extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onPlay = this.onPlay.bind(this);\r\n        this.onClear = this.onClear.bind(this);\r\n\r\n        this.state = {\r\n            canvasRef: React.createRef(),\r\n            orientation: 0,\r\n            centerPos: null\r\n        };\r\n    }\r\n\r\n    nextPos(orientation) {\r\n        return {\r\n            x: this.state.centerPos.x + (this.props.data.get(orientation) * Math.cos(orientation*2*Math.PI)),\r\n            y: this.state.centerPos.y - (this.props.data.get(orientation) * Math.sin(orientation*2*Math.PI))\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.props.setPlay(this.onPlay)\r\n        this.props.setClear(this.onClear)\r\n\r\n        const cPos = {x: this.state.canvasRef.current.width / 2, y: this.state.canvasRef.current.height / 2}\r\n        this.setState({centerPos: cPos})\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        // ctx.moveTo(this.state.canvasRef.current.width / 2, this.state.canvasRef.current.height / 2)\r\n        // ctx.beginPath()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        ctx.lineTo(this.nextPos(this.state.orientation).x, this.nextPos(this.state.orientation).y)\r\n        //ctx.stroke()\r\n    }\r\n\r\n    resetPath(ctx) {\r\n        //ctx.closePath()\r\n        //ctx.moveTo(this.state.centerPos.x, this.state.centerPos.y)\r\n        //ctx.beginPath()\r\n    }\r\n\r\n    async onPlay() {\r\n\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        const STEP = 0.01 \r\n        const EXECUTE_TIME_MIN = 200 * STEP //ms\r\n\r\n        ctx.moveTo(this.state.canvasRef.current.width / 2, this.state.canvasRef.current.height / 2)\r\n        ctx.beginPath()\r\n\r\n        for(let i = 0; i <= 1 + STEP; i = i + STEP) {\r\n            let t0 = performance.now()\r\n            if(i > 1) this.setState({orientation: 1}); else this.setState({orientation: i})\r\n            ctx.stroke()\r\n            let t1 = performance.now()\r\n            let deltaTime = t1 - t0\r\n\r\n            if(deltaTime < EXECUTE_TIME_MIN) { await new Promise(r => setTimeout(r, EXECUTE_TIME_MIN - deltaTime)); }\r\n        }\r\n\r\n        this.resetPath(ctx)\r\n    }\r\n\r\n    onClear() {\r\n        const ctx = this.state.canvasRef.current.getContext('2d')\r\n        this.resetPath(ctx)\r\n        ctx.clearRect(0, 0, this.state.canvasRef.current.width, this.state.canvasRef.current.height)\r\n    }\r\n\r\n    render() { return (\r\n        <div className=\"Canvas\">\r\n            <h1>Canvas</h1>\r\n            <canvas ref={this.state.canvasRef} height={480} width={480} />\r\n        </div>\r\n    )}\r\n\r\n}\r\n\r\nexport default Canvas","import React from 'react'\r\nimport * as d3 from \"d3\"\r\nimport {index, mouse} from \"d3\"\r\n\r\nclass Graph extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.margin = {top: 20, right: 30, bottom: 20, left: 30}\r\n        this.width = 480; this.height = 480;\r\n        this.xScale = null\r\n        this.yScale = null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.xScale = this.getXScaleFun()\r\n        this.yScale = this.getYScaleFun()\r\n        this.drawChart()\r\n        this.drawPath()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.xScale = this.getXScaleFun()\r\n        this.yScale = this.getYScaleFun()\r\n        this.drawChart()\r\n        this.drawPath()\r\n    }\r\n\r\n    getXScaleFun() {\r\n        return d3.scaleLinear()\r\n            .domain([this.props.xMin, this.props.xMax])\r\n            .range([0 + this.margin.right, this.width - this.margin.left])\r\n            .clamp(true);\r\n    }\r\n\r\n    getYScaleFun() {\r\n        return d3.scaleLinear()\r\n            .domain([this.props.yMin, this.props.yMax])\r\n            .range([0 + this.margin.top, this.height - this.margin.bottom])\r\n    }\r\n\r\n    drawPath() {\r\n        const line = d3.line()\r\n            .x(d => this.xScale(d.x))\r\n            .y(d => this.yScale(d.y))\r\n\r\n        const drag = d3.drag()\r\n            .on(\"drag\", (event, d) => {\r\n                this.props.onChange(d.value.p.x, this.yScale.invert(event.y))\r\n            })\r\n            //.subject({x: this.xScale(0), y: this.yScale(0)})\r\n\r\n        const addPoints = () => {\r\n            console.log(\"addPoints(): \", this.props.data.pointList)\r\n            svg.selectAll(\"pathCircles\")\r\n                .data(this.props.data.toList())\r\n                .enter()\r\n                .append(\"circle\")\r\n                    .attr(\"id\", \"pathPoints\")\r\n                    .attr(\"cx\", d => this.xScale(d.value.p.x))\r\n                    .attr(\"cy\", d => this.yScale(d.value.p.y))\r\n                    .attr(\"fill\", \"red\")\r\n                    .attr(\"r\", 4)\r\n                    .on(\"mouseover\", function(d) { d3.select(this).attr(\"stroke\", \"black\").attr(\"stroke-width\", 4) })\r\n                    .on(\"mouseout\", function(d) { d3.select(this).attr(\"stroke\", \"none\") })\r\n                    .call(drag)\r\n                    .on(\"click\", event => { if(event.defaultPrevented) return })\r\n\r\n        }\r\n\r\n        // for non linear functions\r\n        // const dataPoints = (STEP) => {\r\n        //     let arr = []\r\n        //     for(let i = 0; i <= 1; i = i + STEP) arr.push({x: i, y: this.props.data.get(i)})\r\n        //     return arr\r\n        // }\r\n\r\n        const dataPoints = () => {\r\n            let sortedList = this.props.data.toSortedList()\r\n            return sortedList.map((e) => { return {x: e.value.p.x, y: e.value.p.y} })\r\n        }\r\n\r\n        const svg = d3.select(\"svg\")\r\n        const data = dataPoints()\r\n        console.log(data)\r\n        \r\n        svg.selectAll(\"#pathPoints\").remove()\r\n        addPoints()\r\n\r\n        svg.selectAll(\"#dataPath\").remove()\r\n        const graph = svg.append(\"path\")\r\n            .attr(\"id\", \"dataPath\")\r\n            .datum(data)\r\n                .attr(\"d\", line)\r\n                .attr(\"fill\", \"none\")\r\n                .attr(\"stroke\", \"red\")\r\n                .attr(\"stroke-width\", 2)\r\n    }\r\n\r\n    drawChart() {\r\n        const svg = d3.select(\"svg\")\r\n        console.log(\"drawChart:\" + this.yScale.domain()[0])\r\n        const addAxes = () => {\r\n            svg.append(\"g\")\r\n            .attr(\"class\", \"axes\")\r\n            .attr(\"transform\", `translate(0,${this.width * 0.5})`)\r\n            .call(d3.axisTop(this.xScale))\r\n\r\n            svg.append(\"g\")\r\n            .attr(\"class\", \"axes\")\r\n            .attr(\"transform\", `translate(${this.margin.left},0)`)\r\n            .call(d3.axisLeft(this.yScale))\r\n        }\r\n\r\n        d3.select(\"rect\")\r\n            .on(\"click\", event => {\r\n                this.props.onAdd(this.xScale.invert(d3.pointer(event)[0]), this.yScale.invert(d3.pointer(event)[1]))\r\n            })\r\n        svg.selectAll(\".axes\").remove()\r\n        addAxes()\r\n    }\r\n\r\n    render () { return (\r\n        <div className=\"Graph\">\r\n            <h1>Radius graph</h1>\r\n            <svg height={this.height} width={this.width}>\r\n                <g>\r\n                    <rect fill={\"#d6d6d6\"} height={this.height} width={this.width}></rect>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Graph","class Point {\r\n    constructor(px, py, fun) {\r\n        this.p = {x: px, y: py}\r\n        this.fun = fun\r\n    }\r\n\r\n    copy() {\r\n        //deep copy\r\n        return new Point(this.p.x, this.p.y, this.fun.bind({}))\r\n    }\r\n}\r\n\r\nclass Data {\r\n\r\n    constructor(prevPointList, initialize) {\r\n        this.pointList = prevPointList  //not actually a list but an object\r\n\r\n        if(initialize) {\r\n            console.log(\"Initializing pointList.\")\r\n            this.add({x: 1, y: 10}, \"constant\")\r\n            this.add({x: 0, y: 10}, \"linear\")\r\n            //this.replace(0, 20, \"linear\")\r\n        }\r\n\r\n        console.log(\"Constructed pointList: \", this.pointList)\r\n    }\r\n\r\n    copy() {\r\n        //creates deep copy of Data. For React <3\r\n        let newList = {}\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            newList[i] = v.copy()\r\n        }\r\n        return new Data(newList, false)\r\n    }\r\n\r\n    reverse() {\r\n        //returns new Data object with points reversed\r\n        let newData = new Data({}, false)\r\n        for(const [i, v] of Object.entries(this.pointList)) {\r\n            if(i === 0) newData.add({x: 1 - v.p.x, y: v.p.y}, \"constant\")\r\n            else newData.add({x: 1 - v.p.x, y: v.p.y}, \"linear\")\r\n        }\r\n\r\n        return newData\r\n    }\r\n\r\n    snap() {\r\n        const snapValue = this.pointList[1].p.y - this.pointList[0].p.y\r\n        let newData = new Data({}, false)\r\n\r\n        for(const [i, v] of Object.entries(this.pointList)) {\r\n            if(i === 1) newData.add({x: v.p.x, y: v.p.y + snapValue}, \"constant\")\r\n            newData.add({x: v.p.x, y: v.p.y + snapValue}, \"linear\")\r\n        }\r\n        console.log(newData)\r\n        return newData\r\n    }\r\n\r\n    toList() {\r\n        let list = []\r\n        for (const [i, v] of Object.entries(this.pointList)) list.push({value: v, index: i})\r\n        return list\r\n    }\r\n\r\n    toSortedList() {\r\n        let list = this.toList()\r\n        let sList = list.sort((p1, p2) => {\r\n            if(p1.index < p2.index) return -1\r\n            else if(p1.index > p2.index) return 1\r\n            else return 0\r\n        })\r\n        console.log(\"sortedList:\", sList)\r\n        return sList\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return this.pointList.values()\r\n    }\r\n\r\n    get(x) {\r\n        const prevPoint = this.findPrevPoint(x)\r\n        if(prevPoint === null) return this.pointList[0].fun(x)  //first point\r\n        return prevPoint.value.fun(x) \r\n    }\r\n\r\n    replace(i, py, type) {\r\n        const p = {x: this.pointList[i].p.x, y: py}\r\n        //this.delete(i)\r\n        this.add(p, type)\r\n        console.log(\"Post-replace pointList: \", this.pointList)\r\n    }\r\n\r\n    add(p1, type) {\r\n        let fun\r\n        if(this.findNextPoint(p1.x) === null) type = \"constant\"\r\n        switch(type) {\r\n            case \"linear\":\r\n                const p2 = this.findNextPoint(p1.x).value.p\r\n                fun = x => (x - p1.x) * (p2.y - p1.y) / (p2.x - p1.x) + p1.y\r\n                break;\r\n            case \"constant\":\r\n                fun = x => p1.y\r\n                break;\r\n            case \"none\":\r\n                fun = x => 0\r\n                break;\r\n            case \"sine\":\r\n            default:\r\n                console.log(\"Function type not supported. Using default function.\")\r\n                fun = x => 10\r\n        }\r\n        this.pointList[p1.x] = (new Point(p1.x, p1.y, fun))\r\n        let prevPoint = this.findPrevPoint(p1.x)\r\n        if(prevPoint !== null) this.replace(prevPoint.index, prevPoint.value.p.y, \"linear\") //type is a guess\r\n    }\r\n\r\n    getScale() {\r\n        const mean = Object.values(this.pointList).reduce((a, b) => {return new Point(0, a.p.y + b.p.y, () => 0)}).p.y / Object.keys(this.pointList).length\r\n\r\n        return {\r\n            min: mean - 50,\r\n            max: mean + 50\r\n        }\r\n    }\r\n\r\n    findNextPoint(x) {\r\n        // find next point relative to x along with the index\r\n        // scans every point in pointList\r\n\r\n        let nextPoint = null\r\n\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            if(x < v.p.x && (nextPoint === null || v.p.x < nextPoint.value.p.x)) {\r\n                nextPoint = {value: v, index: i}\r\n            }\r\n        }\r\n\r\n        return nextPoint\r\n    }\r\n\r\n    findPrevPoint(x, canBeX) {\r\n        // find previous point relative to x along with the index\r\n        // scans every point in pointList\r\n\r\n        let prevPoint = null\r\n\r\n        for (const [i, v] of Object.entries(this.pointList)) {\r\n            if(x > v.p.x && (prevPoint === null || v.p.x > prevPoint.value.p.x)) {\r\n                prevPoint = {value: v, index: i}\r\n            }\r\n        }\r\n\r\n        return prevPoint\r\n    }\r\n}\r\n\r\nexport default Data","import React from 'react'\r\nimport './App.css';\r\nimport Canvas from './Canvas.js';\r\nimport Graph from './Graph';\r\nimport Data, { Point } from './Data';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    //this.replaceDataValue = this.replaceDataValue.bind(this);\r\n    this.onChange = this.onChange.bind(this)\r\n    this.onAdd = this.onAdd.bind(this)\r\n    this.onReverse = this.onReverse.bind(this)\r\n    this.onSnap = this.onSnap.bind(this)\r\n    this.onDefault = this.onDefault.bind(this)\r\n    this.state = {\r\n      //data: []\r\n      data: new Data({}, true),\r\n      yScaleMin: -50, yScaleMax: 50\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //this.setState({data: this.state.data.copy()})\r\n    //this.onChange(0, 20)\r\n  }\r\n\r\n  componentDidUpdate() {}\r\n\r\n  onChange(i, py) {\r\n    this.state.data.replace(i, py, \"linear\")\r\n    this.setState({data: this.state.data.copy()})\r\n  }\r\n\r\n  onAdd(px, py) {\r\n    this.state.data.add({x: px, y: py}, \"linear\")\r\n    this.setState({data: this.state.data.copy()})\r\n  }\r\n\r\n  onReverse() {\r\n    this.setState({data: this.state.data.reverse()})\r\n  }\r\n\r\n  onSnap() {\r\n    console.log(\"scale:\" + this.state.yScaleMin + \" \" + this.state.yScaleMax)\r\n    this.setState({\r\n      data: this.state.data.snap(),\r\n      yScaleMin: this.state.data.getScale().min,\r\n      yScaleMax: this.state.data.getScale().max\r\n    })\r\n    //TODO NOT THE BEST SYSTEM FOR USER.\r\n    //CHANGE X AXIS\r\n    console.log(\"scale:\" + this.state.yScaleMin + \" \" + this.state.yScaleMax)\r\n  }\r\n\r\n  onDefault() {\r\n    this.setState({\r\n      data: new Data({}, true),\r\n      yScaleMin: -50,\r\n      yScaleMax: 50\r\n    })\r\n  }\r\n\r\n  render() { return (\r\n    <div className=\"App\">\r\n      <div className=\"Meat\">\r\n        <Canvas data={this.state.data} setPlay={play => this.playCanvas = play} setClear={clear => this.clearCanvas = clear}/>\r\n        <Graph\r\n          data={this.state.data} onChange={this.onChange} onAdd={this.onAdd}\r\n          xMin={0} xMax={1} yMin={this.state.yScaleMin} yMax={this.state.yScaleMax}\r\n        />\r\n      </div>\r\n      <div className=\"Buttons\">\r\n        <button onClick={() => this.playCanvas()}>Play</button>\r\n        <button onClick={() => this.clearCanvas()}>Clear</button>\r\n        <button onClick={this.onReverse}>Reverse</button>\r\n        <button onClick={this.onSnap}>Snap</button>\r\n        <button onClick={this.onDefault}>Default</button>\r\n      </div>\r\n    </div>\r\n  )}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}