[{"G:\\Programming\\javascript\\circular_patterns\\src\\index.js":"1","G:\\Programming\\javascript\\circular_patterns\\src\\reportWebVitals.js":"2","G:\\Programming\\javascript\\circular_patterns\\src\\App.js":"3","G:\\Programming\\javascript\\circular_patterns\\src\\Canvas.js":"4","G:\\Programming\\javascript\\circular_patterns\\src\\Graph.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":938,"mtime":1608659901814,"results":"9","hashOfConfig":"7"},{"size":2027,"mtime":1608659972063,"results":"10","hashOfConfig":"7"},{"size":1846,"mtime":1608659963049,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"onoa9x",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"G:\\Programming\\javascript\\circular_patterns\\src\\index.js",[],["24","25"],"G:\\Programming\\javascript\\circular_patterns\\src\\reportWebVitals.js",[],"G:\\Programming\\javascript\\circular_patterns\\src\\App.js",[],"G:\\Programming\\javascript\\circular_patterns\\src\\Canvas.js",[],"G:\\Programming\\javascript\\circular_patterns\\src\\Graph.js",["26","27"],"import React from 'react'\r\nimport * as d3 from \"d3\";\r\n\r\nclass Graph extends React.Component {\r\n    componentDidMount() {\r\n        this.drawChart()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.drawChart()\r\n    }\r\n\r\n    drawChart() {\r\n        const line = d3.line()\r\n            .x(d => xScale(d.x))\r\n            .y(d => yScale(d.y))\r\n\r\n        const xScale = d3.scaleLinear()\r\n            .domain([0, 359])\r\n            .range([0, 480]);\r\n\r\n        const yScale = d3.scaleLinear()\r\n            .domain([0, 50])\r\n            .range([0, 480]);\r\n\r\n        const yScale2 = d3.scaleLinear()\r\n            .domain([0, 50])\r\n            .range([10, 470]);\r\n\r\n        const xScaleInvert = d3.scaleLinear()\r\n            .domain([0, 480])\r\n            .range([0, 359]);\r\n\r\n        const yScaleInvert = d3.scaleLinear()\r\n            .domain([0, 480])\r\n            .range([0, 50]);\r\n\r\n        const svg = d3.select(\"svg\")\r\n            .on(\"click\", (event) => {\r\n                const i = Math.round(xScaleInvert(d3.pointer(event)[0]))\r\n                const v = Math.round(yScaleInvert(d3.pointer(event)[1]))\r\n                this.props.mutateData(i, v)\r\n                console.log(this.props.data)\r\n            })\r\n\r\n        const graph = svg.append(\"path\")\r\n            .datum(this.props.data)\r\n                .attr(\"d\", line)\r\n                .attr(\"stroke\", \"black\")\r\n                .attr(\"stroke-width\", 2)\r\n\r\n        const text = svg.selectAll(\"text\")\r\n            .data([0, 10, 20, 30, 40, 50]).enter().append(\"text\")\r\n                .text(d => d)\r\n                .attr(\"x\", d => 10)\r\n                .attr(\"y\", d => yScale2(d))\r\n    }\r\n\r\n    render () { return (\r\n        <div className=\"Graph\">\r\n            <h1>Radius graph</h1>\r\n            <svg height={480} width={480}></svg>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Graph",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":46,"column":15,"nodeType":"34","messageId":"35","endLine":46,"endColumn":20},{"ruleId":"32","severity":1,"message":"36","line":52,"column":15,"nodeType":"34","messageId":"35","endLine":52,"endColumn":19},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'graph' is assigned a value but never used.","Identifier","unusedVar","'text' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]